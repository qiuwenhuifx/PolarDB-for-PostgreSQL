import{_ as d,r as o,o as u,c as k,d as s,a as n,w as t,b as a,e as c}from"./app-BamYSO-S.js";const h={},m=n("h1",{id:"smlar",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#smlar"},[n("span",null,"smlar")])],-1),g={class:"table-of-contents"},_=n("h2",{id:"背景",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#背景"},[n("span",null,"背景")])],-1),f={href:"https://github.com/jirutka/smlar",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"smlar",-1),y=c(`<div class="custom-container warning"><p class="custom-container-title">注意</p><p>由于 smlar 插件的 <code>%</code> 操作符与 RUM 插件的 <code>%</code> 操作符冲突，因此 smlar 与 RUM 两个插件无法同时创建在同一 schema 中。</p></div><h2 id="函数及运算符介绍" tabindex="-1"><a class="header-anchor" href="#函数及运算符介绍"><span>函数及运算符介绍</span></a></h2><ul><li><p><strong><code>float4 smlar(anyarray, anyarray)</code></strong></p><p>计算两个数组的相似度，数组的数据类型需要一致。</p></li><li><p><strong><code>float4 smlar(anyarray, anyarray, bool useIntersect)</code></strong></p><p>计算两个自定义复合类型数组的相似度，<code>useIntersect</code> 参数表示是否让仅重叠元素还是全部元素参与运算；复合类型可由以下方式定义：</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TYPE</span> type_name <span class="token keyword">AS</span> <span class="token punctuation">(</span>element_name anytype<span class="token punctuation">,</span> weight_name FLOAT4<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></li><li><p><strong><code>float4 smlar(anyarray a, anyarray b, text formula);</code></strong></p><p>使用参数给定的公式来计算两个数组的相似度，数组的数据类型需要一致；公式中可以使用的预定义变量有：</p><ul><li><code>N.i</code>：两个数组中的相同元素个数（交集）</li><li><code>N.a</code>：第一个数组中的唯一元素个数</li><li><code>N.b</code>：第二个数组中的唯一元素个数</li></ul><div class="language-sql" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> smlar<span class="token punctuation">(</span><span class="token string">&#39;{1,4,6}&#39;</span>::<span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;{5,4,6}&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;N.i / sqrt(N.a * N.b)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></li><li><p><strong><code>anyarray % anyarray</code></strong></p><p>该运算符的含义为，当两个数组的的相似度超过阈值时返回 <code>TRUE</code>，否则返回 <code>FALSE</code>。</p></li><li><p><strong><code>text[] tsvector2textarray(tsvector)</code></strong></p><p>将 <code>tsvector</code> 类型转换为字符串数组。</p></li><li><p><strong><code>anyarray array_unique(anyarray)</code></strong></p><p>对数组进行排序、去重。</p></li><li><p><strong><code>float4 inarray(anyarray, anyelement)</code></strong></p><p>如果元素出现在数组中，则返回 <code>1.0</code>；否则返回 <code>0</code>。</p></li><li><p><strong><code>float4 inarray(anyarray, anyelement, float4, float4)</code></strong></p><p>如果元素出现在数组中，则返回第三个参数；否则返回第四个参数。</p></li></ul><h2 id="可配置参数说明" tabindex="-1"><a class="header-anchor" href="#可配置参数说明"><span>可配置参数说明</span></a></h2>`,4),b=n("li",null,[n("p",null,[n("strong",null,[n("code",null,"smlar.threshold FLOAT")])]),n("p",null,[a("相似度阈值，用于给 "),n("code",null,"%"),a(" 运算符判断两个数组是否相似。")])],-1),w=n("li",null,[n("p",null,[n("strong",null,[n("code",null,"smlar.persistent_cache BOOL")])]),n("p",null,"全局统计信息的缓存是否存放在与事务无关的内存中。")],-1),q=n("p",null,[n("strong",null,[n("code",null,"smlar.type STRING")]),a("：相似度计算公式，可选的相似度类型包含：")],-1),E={href:"https://en.wikipedia.org/wiki/Cosine_similarity",target:"_blank",rel:"noopener noreferrer"},x={href:"https://zh.wikipedia.org/zh-cn/Tf-idf",target:"_blank",rel:"noopener noreferrer"},N={href:"https://en.wikipedia.org/wiki/Overlap_coefficient",target:"_blank",rel:"noopener noreferrer"},T=c(`<li><p><strong><code>smlar.stattable STRING</code></strong></p><p>存储集合范围统计信息的表名，表定义如下：</p><div class="language-sql" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> table_name <span class="token punctuation">(</span>
  <span class="token keyword">value</span>   data_type <span class="token keyword">UNIQUE</span><span class="token punctuation">,</span>
  ndoc    int4 <span class="token punctuation">(</span><span class="token operator">or</span> <span class="token keyword">bigint</span><span class="token punctuation">)</span>  <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">CHECK</span> <span class="token punctuation">(</span>ndoc<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></li><li><p><strong><code>smlar.tf_method STRING</code></strong>：计算词频（TF，Term Frequency）的方法，取值如下</p><ul><li><code>n</code>：简单计数（默认）</li><li><code>log</code>：<code>1 + log(n)</code></li><li><code>const</code>：频率等于 <code>1</code></li></ul></li><li><p><strong><code>smlar.idf_plus_one BOOL</code></strong>：计算逆文本频率指数的方法（IDF，Inverse Document Frequency）的方法，取值如下</p><ul><li><code>FALSE</code>：<code>log(d / df)</code>（默认）</li><li><code>TRUE</code>：<code>log(1 + d / df)</code></li></ul></li>`,3),S=c(`<h2 id="基本使用方法" tabindex="-1"><a class="header-anchor" href="#基本使用方法"><span>基本使用方法</span></a></h2><h3 id="安装插件" tabindex="-1"><a class="header-anchor" href="#安装插件"><span>安装插件</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> EXTENSION smlar<span class="token punctuation">;</span>
</code></pre></div><h3 id="相似度计算" tabindex="-1"><a class="header-anchor" href="#相似度计算"><span>相似度计算</span></a></h3><p>使用上述的函数计算两个数组的相似度：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> smlar<span class="token punctuation">(</span><span class="token string">&#39;{3,2}&#39;</span>::<span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;{3,2,1}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  smlar
<span class="token comment">----------</span>
 <span class="token number">0.816497</span>
<span class="token punctuation">(</span><span class="token number">1</span> <span class="token keyword">row</span><span class="token punctuation">)</span>

<span class="token keyword">SELECT</span> smlar<span class="token punctuation">(</span><span class="token string">&#39;{1,4,6}&#39;</span>::<span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;{5,4,6}&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;N.i / (N.a + N.b)&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
  smlar
<span class="token comment">----------</span>
 <span class="token number">0.333333</span>
<span class="token punctuation">(</span><span class="token number">1</span> <span class="token keyword">row</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="卸载插件" tabindex="-1"><a class="header-anchor" href="#卸载插件"><span>卸载插件</span></a></h3><div class="language-sql" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> EXTENSION smlar<span class="token punctuation">;</span>
</code></pre></div><h2 id="原理和设计" tabindex="-1"><a class="header-anchor" href="#原理和设计"><span>原理和设计</span></a></h2>`,9),L={href:"https://github.com/jirutka/smlar",target:"_blank",rel:"noopener noreferrer"},I={href:"https://www.pgcon.org/2012/schedule/track/Hacking/443.en.html",target:"_blank",rel:"noopener noreferrer"},C={href:"https://www.pgcon.org/2012/schedule/attachments/252_smlar-2012.pdf",target:"_blank",rel:"noopener noreferrer"};function O(r,R){const p=o("Badge"),i=o("ArticleInfo"),e=o("router-link"),l=o("ExternalLinkIcon");return u(),k("div",null,[m,s(p,{type:"tip",text:"V11 / v1.1.28-",vertical:"top"}),s(i,{frontmatter:r.$frontmatter},null,8,["frontmatter"]),n("nav",g,[n("ul",null,[n("li",null,[s(e,{to:"#背景"},{default:t(()=>[a("背景")]),_:1})]),n("li",null,[s(e,{to:"#函数及运算符介绍"},{default:t(()=>[a("函数及运算符介绍")]),_:1})]),n("li",null,[s(e,{to:"#可配置参数说明"},{default:t(()=>[a("可配置参数说明")]),_:1})]),n("li",null,[s(e,{to:"#基本使用方法"},{default:t(()=>[a("基本使用方法")]),_:1}),n("ul",null,[n("li",null,[s(e,{to:"#安装插件"},{default:t(()=>[a("安装插件")]),_:1})]),n("li",null,[s(e,{to:"#相似度计算"},{default:t(()=>[a("相似度计算")]),_:1})]),n("li",null,[s(e,{to:"#卸载插件"},{default:t(()=>[a("卸载插件")]),_:1})])])]),n("li",null,[s(e,{to:"#原理和设计"},{default:t(()=>[a("原理和设计")]),_:1})])])]),_,n("p",null,[a("对大规模的数据进行相似度计算在电商业务、搜索引擎中是一个很关键的技术问题。相对简易的相似度计算实现不仅运算速度慢，还十分消耗资源。"),n("a",f,[v,s(l)]),a(" 是 PostgreSQL 的一款开源第三方插件，提供了可以在数据库内高效计算数据相似度的函数，并提供了支持 GiST 和 GIN 索引的相似度运算符。目前该插件已经支持 PostgreSQL 所有的内置数据类型。")]),y,n("ul",null,[b,w,n("li",null,[q,n("ul",null,[n("li",null,[n("a",E,[a("cosine"),s(l)]),a("（默认）")]),n("li",null,[n("a",x,[a("tfidf"),s(l)])]),n("li",null,[n("a",N,[a("overlap"),s(l)])])])]),T]),S,n("p",null,[n("a",L,[a("GitHub - jirutka/smlar"),s(l)])]),n("p",null,[n("a",I,[a("PGCon 2012 - Finding Similar: Effective similarity search in database"),s(l)]),a(" ("),n("a",C,[a("slides"),s(l)]),a(")")])])}const F=d(h,[["render",O],["__file","smlar.html.vue"]]),B=JSON.parse('{"path":"/zh/features/v11/extensions/smlar.html","title":"smlar","lang":"zh-CN","frontmatter":{"author":"棠羽","date":"2022/10/05","minute":10},"headers":[{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":2,"title":"函数及运算符介绍","slug":"函数及运算符介绍","link":"#函数及运算符介绍","children":[]},{"level":2,"title":"可配置参数说明","slug":"可配置参数说明","link":"#可配置参数说明","children":[]},{"level":2,"title":"基本使用方法","slug":"基本使用方法","link":"#基本使用方法","children":[{"level":3,"title":"安装插件","slug":"安装插件","link":"#安装插件","children":[]},{"level":3,"title":"相似度计算","slug":"相似度计算","link":"#相似度计算","children":[]},{"level":3,"title":"卸载插件","slug":"卸载插件","link":"#卸载插件","children":[]}]},{"level":2,"title":"原理和设计","slug":"原理和设计","link":"#原理和设计","children":[]}],"git":{"updatedTime":1731551625000,"contributors":[{"name":"mrdrivingduck","email":"mrdrivingduck@gmail.com","commits":1}]},"filePathRelative":"zh/features/v11/extensions/smlar.md"}');export{F as comp,B as data};
