import{_ as k,r as p,o as d,c as h,d as a,a as n,w as t,b as s,e as m}from"./app-BamYSO-S.js";const f={},b=n("h1",{id:"格式化并挂载-pfs",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#格式化并挂载-pfs"},[n("span",null,"格式化并挂载 PFS")])],-1),_=n("p",null,"PolarDB File System，简称 PFS 或 PolarFS，是由阿里云自主研发的高性能类 POSIX 的用户态分布式文件系统，服务于阿里云数据库 PolarDB 产品。使用 PFS 对共享存储进行格式化并挂载后，能够保证一个计算节点对共享存储的写入能够立刻对另一个计算节点可见。",-1),g={class:"table-of-contents"},v=n("h2",{id:"pfs-编译安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pfs-编译安装"},[n("span",null,"PFS 编译安装")])],-1),P={href:"https://hub.docker.com/r/polardb/polardb_pg_binary/tags",target:"_blank",rel:"noopener noreferrer"},x=n("div",{class:"language-bash","data-ext":"sh","data-title":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"docker"),s(` pull polardb/polardb_pg_binary:15
`),n("span",{class:"token function"},"docker"),s(" run "),n("span",{class:"token parameter variable"},"-it"),s(),n("span",{class:"token punctuation"},"\\"),s(`
    --cap-add`),n("span",{class:"token operator"},"="),s("SYS_PTRACE "),n("span",{class:"token punctuation"},"\\"),s(`
    `),n("span",{class:"token parameter variable"},"--privileged"),n("span",{class:"token operator"},"="),s("true "),n("span",{class:"token punctuation"},"\\"),s(`
    `),n("span",{class:"token parameter variable"},"--name"),s(" polardb_pg "),n("span",{class:"token punctuation"},"\\"),s(`
    --shm-size`),n("span",{class:"token operator"},"="),s("512m "),n("span",{class:"token punctuation"},"\\"),s(`
    polardb/polardb_pg_binary:15 `),n("span",{class:"token punctuation"},"\\"),s(`
    `),n("span",{class:"token function"},"bash"),s(`
`)])])],-1),S=n("div",{class:"language-bash","data-ext":"sh","data-title":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"docker"),s(` pull registry.cn-hangzhou.aliyuncs.com/polardb_pg/polardb_pg_binary:15
`),n("span",{class:"token function"},"docker"),s(" run "),n("span",{class:"token parameter variable"},"-it"),s(),n("span",{class:"token punctuation"},"\\"),s(`
    --cap-add`),n("span",{class:"token operator"},"="),s("SYS_PTRACE "),n("span",{class:"token punctuation"},"\\"),s(`
    `),n("span",{class:"token parameter variable"},"--privileged"),n("span",{class:"token operator"},"="),s("true "),n("span",{class:"token punctuation"},"\\"),s(`
    `),n("span",{class:"token parameter variable"},"--name"),s(" polardb_pg "),n("span",{class:"token punctuation"},"\\"),s(`
    --shm-size`),n("span",{class:"token operator"},"="),s("512m "),n("span",{class:"token punctuation"},"\\"),s(`
    registry.cn-hangzhou.aliyuncs.com/polardb_pg/polardb_pg_binary:15 `),n("span",{class:"token punctuation"},"\\"),s(`
    `),n("span",{class:"token function"},"bash"),s(`
`)])])],-1),F={href:"https://github.com/ApsaraDB/polardb-file-system/blob/master/Readme-CN.md",target:"_blank",rel:"noopener noreferrer"},y=n("h2",{id:"块设备重命名",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#块设备重命名"},[n("span",null,"块设备重命名")])],-1),B=n("strong",null,"以特定字符开头的块设备",-1),D={href:"https://github.com/ApsaraDB/PolarDB-FileSystem",target:"_blank",rel:"noopener noreferrer"},q={href:"https://github.com/ApsaraDB/PolarDB-FileSystem/blob/master/src/pfs_core/pfs_api.h",target:"_blank",rel:"noopener noreferrer"},C=n("code",null,"src/pfs_core/pfs_api.h",-1),A=m(`<div class="language-c" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">PFS_PATH_ISVALID</span><span class="token expression"><span class="token punctuation">(</span>path<span class="token punctuation">)</span>                                  </span><span class="token punctuation">\\</span>
    <span class="token expression"><span class="token punctuation">(</span>path <span class="token operator">!=</span> <span class="token constant">NULL</span> <span class="token operator">&amp;&amp;</span>                                            </span><span class="token punctuation">\\</span>
     <span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">(</span>path<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> </span><span class="token char">&#39;/&#39;</span> <span class="token expression"><span class="token operator">&amp;&amp;</span> <span class="token function">isdigit</span><span class="token punctuation">(</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> path<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> </span><span class="token char">&#39;.&#39;</span>  <span class="token punctuation">\\</span>
      <span class="token expression"><span class="token operator">||</span> <span class="token function">strncmp</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> </span><span class="token string">&quot;/pangu-&quot;</span><span class="token expression"><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>                       </span><span class="token punctuation">\\</span>
      <span class="token expression"><span class="token operator">||</span> <span class="token function">strncmp</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> </span><span class="token string">&quot;/sd&quot;</span><span class="token expression"><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>                           </span><span class="token punctuation">\\</span>
      <span class="token expression"><span class="token operator">||</span> <span class="token function">strncmp</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> </span><span class="token string">&quot;/sf&quot;</span><span class="token expression"><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>                           </span><span class="token punctuation">\\</span>
      <span class="token expression"><span class="token operator">||</span> <span class="token function">strncmp</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> </span><span class="token string">&quot;/vd&quot;</span><span class="token expression"><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>                           </span><span class="token punctuation">\\</span>
      <span class="token expression"><span class="token operator">||</span> <span class="token function">strncmp</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> </span><span class="token string">&quot;/nvme&quot;</span><span class="token expression"><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>                         </span><span class="token punctuation">\\</span>
      <span class="token expression"><span class="token operator">||</span> <span class="token function">strncmp</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> </span><span class="token string">&quot;/loop&quot;</span><span class="token expression"><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>                         </span><span class="token punctuation">\\</span>
      <span class="token expression"><span class="token operator">||</span> <span class="token function">strncmp</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> </span><span class="token string">&quot;/mapper_&quot;</span><span class="token expression"><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span>
</code></pre></div><p>因此，为了保证能够顺畅完成后续流程，我们建议在所有访问块设备的节点上使用相同的软链接访问共享块设备。例如，在 NBD 服务端主机上，使用新的块设备名 <code>/dev/nvme1n1</code> 软链接到共享存储块设备的原有名称 <code>/dev/vdb</code> 上：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> /dev/vdb /dev/nvme1n1
</code></pre></div><p>在 NBD 客户端主机上，使用同样的块设备名 <code>/dev/nvme1n1</code> 软链到共享存储块设备的原有名称 <code>/dev/nbd0</code> 上：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> /dev/nbd0 /dev/nvme1n1
</code></pre></div><p>这样便可以在服务端和客户端两台主机上使用相同的块设备名 <code>/dev/nvme1n1</code> 访问同一个块设备。</p><h2 id="块设备格式化" tabindex="-1"><a class="header-anchor" href="#块设备格式化"><span>块设备格式化</span></a></h2><p>使用 <strong>任意一台主机</strong>，在共享存储块设备上格式化 PFS 分布式文件系统：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> pfs <span class="token parameter variable">-C</span> disk <span class="token function">mkfs</span> nvme1n1
</code></pre></div><h2 id="pfs-文件系统挂载" tabindex="-1"><a class="header-anchor" href="#pfs-文件系统挂载"><span>PFS 文件系统挂载</span></a></h2><p>在能够访问共享存储的 <strong>所有主机节点</strong> 上分别启动 PFS 守护进程，挂载 PFS 文件系统：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> /usr/local/polarstore/pfsd/bin/start_pfsd.sh <span class="token parameter variable">-p</span> nvme1n1 <span class="token parameter variable">-w</span> <span class="token number">4</span>
</code></pre></div><hr><h2 id="在-pfs-上编译部署-polardb" tabindex="-1"><a class="header-anchor" href="#在-pfs-上编译部署-polardb"><span>在 PFS 上编译部署 PolarDB</span></a></h2>`,14);function N(l,I){const r=p("ArticleInfo"),e=p("router-link"),o=p("ExternalLinkIcon"),c=p("CodeGroupItem"),u=p("CodeGroup"),i=p("RouteLink");return d(),h("div",null,[b,a(r,{frontmatter:l.$frontmatter},null,8,["frontmatter"]),_,n("nav",g,[n("ul",null,[n("li",null,[a(e,{to:"#pfs-编译安装"},{default:t(()=>[s("PFS 编译安装")]),_:1})]),n("li",null,[a(e,{to:"#块设备重命名"},{default:t(()=>[s("块设备重命名")]),_:1})]),n("li",null,[a(e,{to:"#块设备格式化"},{default:t(()=>[s("块设备格式化")]),_:1})]),n("li",null,[a(e,{to:"#pfs-文件系统挂载"},{default:t(()=>[s("PFS 文件系统挂载")]),_:1})]),n("li",null,[a(e,{to:"#在-pfs-上编译部署-polardb"},{default:t(()=>[s("在 PFS 上编译部署 PolarDB")]),_:1})])])]),v,n("p",null,[s("推荐使用 PolarDB-PG 的 "),n("a",P,[s("可执行文件镜像"),a(o)]),s("，其中已经包含了编译完毕的 PFS 工具，无需手动编译安装。通过以下命令进入容器即可：")]),a(u,null,{default:t(()=>[a(c,{title:"DockerHub"},{default:t(()=>[x]),_:1}),a(c,{title:"阿里云 ACR"},{default:t(()=>[S]),_:1})]),_:1}),n("p",null,[s("PFS 的手动编译安装方式请参考 PFS 的 "),n("a",F,[s("README"),a(o)]),s("，此处不再赘述。")]),y,n("p",null,[s("PFS 仅支持访问 "),B,s("（详情可见 "),n("a",D,[s("PolarDB File System"),a(o)]),s(" 源代码的 "),n("a",q,[C,a(o)]),s(" 文件）：")]),A,n("p",null,[s("参阅 "),a(i,{to:"/zh/deploying/db-pfs.html"},{default:t(()=>[s("PolarDB 编译部署：PFS 文件系统")]),_:1}),s("。")])])}const R=k(f,[["render",N],["__file","fs-pfs.html.vue"]]),E=JSON.parse('{"path":"/zh/deploying/fs-pfs.html","title":"格式化并挂载 PFS","lang":"zh-CN","frontmatter":{"author":"棠羽","date":"2024/08/30","minute":15},"headers":[{"level":2,"title":"PFS 编译安装","slug":"pfs-编译安装","link":"#pfs-编译安装","children":[]},{"level":2,"title":"块设备重命名","slug":"块设备重命名","link":"#块设备重命名","children":[]},{"level":2,"title":"块设备格式化","slug":"块设备格式化","link":"#块设备格式化","children":[]},{"level":2,"title":"PFS 文件系统挂载","slug":"pfs-文件系统挂载","link":"#pfs-文件系统挂载","children":[]},{"level":2,"title":"在 PFS 上编译部署 PolarDB","slug":"在-pfs-上编译部署-polardb","link":"#在-pfs-上编译部署-polardb","children":[]}],"git":{"updatedTime":1731551625000,"contributors":[{"name":"mrdrivingduck","email":"mrdrivingduck@gmail.com","commits":1}]},"filePathRelative":"zh/deploying/fs-pfs.md"}');export{R as comp,E as data};
