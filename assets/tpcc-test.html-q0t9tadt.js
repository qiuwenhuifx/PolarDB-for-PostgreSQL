import{_ as k,r as o,o as u,c as h,d as n,a,w as e,b as s,e as r}from"./app-BamYSO-S.js";const d={},m=a("h1",{id:"tpc-c-测试",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#tpc-c-测试"},[a("span",null,"TPC-C 测试")])],-1),b=a("p",null,"本文将引导您对 PolarDB for PostgreSQL 进行 TPC-C 测试。",-1),_={class:"table-of-contents"},g=a("h2",{id:"背景",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#背景"},[a("span",null,"背景")])],-1),f={href:"https://www.tpc.org/tpcc/",target:"_blank",rel:"noopener noreferrer"},v=a("h2",{id:"测试步骤",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#测试步骤"},[a("span",null,"测试步骤")])],-1),P=a("h3",{id:"部署-polardb-pg",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#部署-polardb-pg"},[a("span",null,"部署 PolarDB-PG")])],-1),x=a("p",null,"参考如下教程部署 PolarDB for PostgreSQL：",-1),C=a("h3",{id:"安装测试工具-benchmarksql",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#安装测试工具-benchmarksql"},[a("span",null,"安装测试工具 BenchmarkSQL")])],-1),T={href:"https://github.com/pgsql-io/benchmarksql",target:"_blank",rel:"noopener noreferrer"},B=a("code",null,"mvn",-1),q=r(`<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> clone https://github.com/pgsql-io/benchmarksql.git
$ <span class="token builtin class-name">cd</span> benchmarksql
$ mvn
</code></pre></div><p>编译出的工具位于如下目录中：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">cd</span> target/run
</code></pre></div><h3 id="tpc-c-配置" tabindex="-1"><a class="header-anchor" href="#tpc-c-配置"><span>TPC-C 配置</span></a></h3><p>在编译完毕的工具目录下，将会存在面向不同数据库产品的示例配置：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">ls</span> <span class="token operator">|</span> <span class="token function">grep</span> sample
sample.firebird.properties
sample.mariadb.properties
sample.oracle.properties
sample.postgresql.properties
sample.transact-sql.properties
</code></pre></div>`,6),L=a("code",null,"sample.postgresql.properties",-1),S={href:"https://github.com/pgsql-io/benchmarksql/blob/master/docs/PROPERTIES.md",target:"_blank",rel:"noopener noreferrer"},E=r(`<p>配置项包含的配置类型有：</p><ul><li>JDBC 驱动及连接信息：需要自行配置 PostgreSQL 数据库运行的连接串、用户名、密码等</li><li>测试规模参数</li><li>测试时间参数</li><li>吞吐量参数</li><li>事务类型参数</li></ul><h3 id="导入数据" tabindex="-1"><a class="header-anchor" href="#导入数据"><span>导入数据</span></a></h3><p>使用 <code>runDatabaseBuild.sh</code> 脚本，以配置文件作为参数，产生和导入测试数据：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>./runDatabaseBuild.sh sample.postgresql.properties
</code></pre></div><h3 id="预热数据" tabindex="-1"><a class="header-anchor" href="#预热数据"><span>预热数据</span></a></h3><p>通常，在正式测试前会进行一次数据预热：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>./runBenchmark.sh sample.postgresql.properties
</code></pre></div><h3 id="正式测试" tabindex="-1"><a class="header-anchor" href="#正式测试"><span>正式测试</span></a></h3><p>预热完毕后，再次运行同样的命令进行正式测试：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>./runBenchmark.sh sample.postgresql.properties
</code></pre></div><h3 id="查看结果" tabindex="-1"><a class="header-anchor" href="#查看结果"><span>查看结果</span></a></h3><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>                                          _____ latency <span class="token punctuation">(</span>seconds<span class="token punctuation">)</span> _____
  TransType              count <span class="token operator">|</span>   mix % <span class="token operator">|</span>    mean       max     90th% <span class="token operator">|</span>    rbk%          errors
+--------------+---------------+---------+---------+---------+---------+---------+---------------+
<span class="token operator">|</span> NEW_ORDER    <span class="token operator">|</span>           <span class="token number">635</span> <span class="token operator">|</span>  <span class="token number">44.593</span> <span class="token operator">|</span>   <span class="token number">0.006</span> <span class="token operator">|</span>   <span class="token number">0.012</span> <span class="token operator">|</span>   <span class="token number">0.008</span> <span class="token operator">|</span>   <span class="token number">1.102</span> <span class="token operator">|</span>             <span class="token number">0</span> <span class="token operator">|</span>
<span class="token operator">|</span> PAYMENT      <span class="token operator">|</span>           <span class="token number">628</span> <span class="token operator">|</span>  <span class="token number">44.101</span> <span class="token operator">|</span>   <span class="token number">0.001</span> <span class="token operator">|</span>   <span class="token number">0.006</span> <span class="token operator">|</span>   <span class="token number">0.002</span> <span class="token operator">|</span>   <span class="token number">0.000</span> <span class="token operator">|</span>             <span class="token number">0</span> <span class="token operator">|</span>
<span class="token operator">|</span> ORDER_STATUS <span class="token operator">|</span>            <span class="token number">58</span> <span class="token operator">|</span>   <span class="token number">4.073</span> <span class="token operator">|</span>   <span class="token number">0.093</span> <span class="token operator">|</span>   <span class="token number">0.168</span> <span class="token operator">|</span>   <span class="token number">0.132</span> <span class="token operator">|</span>   <span class="token number">0.000</span> <span class="token operator">|</span>             <span class="token number">0</span> <span class="token operator">|</span>
<span class="token operator">|</span> STOCK_LEVEL  <span class="token operator">|</span>            <span class="token number">52</span> <span class="token operator">|</span>   <span class="token number">3.652</span> <span class="token operator">|</span>   <span class="token number">0.035</span> <span class="token operator">|</span>   <span class="token number">0.044</span> <span class="token operator">|</span>   <span class="token number">0.041</span> <span class="token operator">|</span>   <span class="token number">0.000</span> <span class="token operator">|</span>             <span class="token number">0</span> <span class="token operator">|</span>
<span class="token operator">|</span> DELIVERY     <span class="token operator">|</span>            <span class="token number">51</span> <span class="token operator">|</span>   <span class="token number">3.581</span> <span class="token operator">|</span>   <span class="token number">0.000</span> <span class="token operator">|</span>   <span class="token number">0.001</span> <span class="token operator">|</span>   <span class="token number">0.001</span> <span class="token operator">|</span>   <span class="token number">0.000</span> <span class="token operator">|</span>             <span class="token number">0</span> <span class="token operator">|</span>
<span class="token operator">|</span> DELIVERY_BG  <span class="token operator">|</span>            <span class="token number">51</span> <span class="token operator">|</span>   <span class="token number">0.000</span> <span class="token operator">|</span>   <span class="token number">0.018</span> <span class="token operator">|</span>   <span class="token number">0.023</span> <span class="token operator">|</span>   <span class="token number">0.020</span> <span class="token operator">|</span>   <span class="token number">0.000</span> <span class="token operator">|</span>             <span class="token number">0</span> <span class="token operator">|</span>
+--------------+---------------+---------+---------+---------+---------+---------+---------------+

Overall NOPM:          <span class="token number">635</span> <span class="token punctuation">(</span><span class="token number">98.76</span>% of the theoretical maximum<span class="token punctuation">)</span>
Overall TPM:         <span class="token number">1,424</span>
</code></pre></div><p>另外也有 CSV 形式的结果被保存，从输出日志中可以找到结果存放目录。</p>`,14);function D(c,R){const i=o("ArticleInfo"),t=o("router-link"),p=o("ExternalLinkIcon"),l=o("RouteLink");return u(),h("div",null,[m,n(i,{frontmatter:c.$frontmatter},null,8,["frontmatter"]),b,a("nav",_,[a("ul",null,[a("li",null,[n(t,{to:"#背景"},{default:e(()=>[s("背景")]),_:1})]),a("li",null,[n(t,{to:"#测试步骤"},{default:e(()=>[s("测试步骤")]),_:1}),a("ul",null,[a("li",null,[n(t,{to:"#部署-polardb-pg"},{default:e(()=>[s("部署 PolarDB-PG")]),_:1})]),a("li",null,[n(t,{to:"#安装测试工具-benchmarksql"},{default:e(()=>[s("安装测试工具 BenchmarkSQL")]),_:1})]),a("li",null,[n(t,{to:"#tpc-c-配置"},{default:e(()=>[s("TPC-C 配置")]),_:1})]),a("li",null,[n(t,{to:"#导入数据"},{default:e(()=>[s("导入数据")]),_:1})]),a("li",null,[n(t,{to:"#预热数据"},{default:e(()=>[s("预热数据")]),_:1})]),a("li",null,[n(t,{to:"#正式测试"},{default:e(()=>[s("正式测试")]),_:1})]),a("li",null,[n(t,{to:"#查看结果"},{default:e(()=>[s("查看结果")]),_:1})])])])])]),g,a("p",null,[s("TPC 是一系列事务处理和数据库基准测试的规范。其中 "),a("a",f,[s("TPC-C"),n(p)]),s(" (Transaction Processing Performance Council) 是针对 OLTP 的基准测试模型。TPC-C 测试模型给基准测试提供了一种统一的测试标准，可以大体观察出数据库服务稳定性、性能以及系统性能等一系列问题。对数据库展开 TPC-C 基准性能测试，一方面可以衡量数据库的性能，另一方面可以衡量采用不同硬件软件系统的性价比，是被业内广泛应用并关注的一种测试模型。")]),v,P,x,a("ul",null,[a("li",null,[n(l,{to:"/zh/deploying/quick-start.html"},{default:e(()=>[s("快速部署")]),_:1})]),a("li",null,[n(l,{to:"/zh/deploying/deploy.html"},{default:e(()=>[s("进阶部署")]),_:1})])]),C,a("p",null,[a("a",T,[s("BenchmarkSQL"),n(p)]),s(" 依赖 Java 运行环境与 Maven 包管理工具，需要预先安装。拉取 BenchmarkSQL 工具源码并进入目录后，通过 "),B,s(" 编译工程：")]),q,a("p",null,[s("其中，"),L,s(" 包含 PostgreSQL 系列数据库的模板参数，可以基于这个模板来修改并自定义配置。参考 BenchmarkSQL 工具的 "),a("a",S,[s("文档"),n(p)]),s(" 可以查看关于配置项的详细描述。")]),E])}const N=k(d,[["render",D],["__file","tpcc-test.html.vue"]]),O=JSON.parse('{"path":"/zh/operation/tpcc-test.html","title":"TPC-C 测试","lang":"zh-CN","frontmatter":{"author":"棠羽","date":"2023/04/11","minute":15},"headers":[{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":2,"title":"测试步骤","slug":"测试步骤","link":"#测试步骤","children":[{"level":3,"title":"部署 PolarDB-PG","slug":"部署-polardb-pg","link":"#部署-polardb-pg","children":[]},{"level":3,"title":"安装测试工具 BenchmarkSQL","slug":"安装测试工具-benchmarksql","link":"#安装测试工具-benchmarksql","children":[]},{"level":3,"title":"TPC-C 配置","slug":"tpc-c-配置","link":"#tpc-c-配置","children":[]},{"level":3,"title":"导入数据","slug":"导入数据","link":"#导入数据","children":[]},{"level":3,"title":"预热数据","slug":"预热数据","link":"#预热数据","children":[]},{"level":3,"title":"正式测试","slug":"正式测试","link":"#正式测试","children":[]},{"level":3,"title":"查看结果","slug":"查看结果","link":"#查看结果","children":[]}]}],"git":{"updatedTime":1731551625000,"contributors":[{"name":"mrdrivingduck","email":"mrdrivingduck@gmail.com","commits":1}]},"filePathRelative":"zh/operation/tpcc-test.md"}');export{N as comp,O as data};
